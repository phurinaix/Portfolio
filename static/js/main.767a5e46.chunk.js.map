{"version":3,"sources":["containers/Home/Home.js","containers/About/About.js","containers/Skills/Skills.js","containers/Work/Work.js","containers/Contact/Contact.js","containers/ErrorPage/ErrorPage.js","components/Layout.js","components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["Home","state","isLoading","_this2","this","setTimeout","setState","prevState","react_default","a","createElement","Fragment","className","ButtonToolbar","lib","to","Button","variant","Component","About","Skills","Work","Contact","ErrorPage","Layout","props","Container","children","Navigation","Navbar","collapseOnSelect","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","href","target","index_es","icon","faFacebookF","faLinkedinIn","faGoogle","App","react_router_dom","src_components_Navigation","components_Layout","react_router","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.767a5e46.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { ButtonToolbar, Button } from 'react-bootstrap';\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport './Home.css';\r\nimport '../../styles/style.css';\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        isLoading: true\r\n    }\r\n    componentDidMount () {\r\n        setTimeout(() => { \r\n            this.setState(prevState => ({\r\n                isLoading: !prevState.isLoading,\r\n            }));\r\n        }, 1000);\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.isLoading ? \r\n                    <div className=\"loading-bar\">\r\n                        <p className=\"loading-text\">LOADING ...</p>\r\n                        <div className=\"progress progress-striped\">\r\n                            <div className=\"progress-bar\" >\r\n                            </div>                       \r\n                        </div> \r\n                    </div>\r\n                :\r\n                    <React.Fragment>\r\n                        <h4>PHURINAT PUEKKHAM</h4>\r\n                        <h2>PORTFOLIO</h2>\r\n                        <ButtonToolbar>\r\n                            <LinkContainer to=\"/profile/contact\">\r\n                                <Button variant=\"outline-warning\" className=\"contact-button\">CONTACT ME</Button>\r\n                            </LinkContainer>\r\n                        </ButtonToolbar>\r\n                    </React.Fragment>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport '../Home/Home.css';\r\nimport '../../styles/style.css';\r\n\r\nclass About extends Component {\r\n    state = {\r\n        isLoading: true\r\n    }\r\n    \r\n    componentDidMount () {\r\n        setTimeout(() => { \r\n            this.setState(prevState => ({\r\n                isLoading: !prevState.isLoading,\r\n            }));\r\n        }, 1000);\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.isLoading ? \r\n                    <div className=\"loading-bar\">\r\n                        <p className=\"loading-text\">LOADING ...</p>\r\n                        <div className=\"progress progress-striped\">\r\n                            <div className=\"progress-bar\" >\r\n                            </div>                       \r\n                        </div> \r\n                    </div>\r\n                : \r\n                    <h2>About</h2>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport '../Home/Home.css';\r\nimport '../../styles/style.css';\r\n\r\nclass Skills extends Component {\r\n    state = {\r\n        isLoading: true\r\n    }\r\n    componentDidMount () {\r\n        setTimeout(() => { \r\n            this.setState(prevState => ({\r\n                isLoading: !prevState.isLoading,\r\n            }));\r\n        }, 1000);\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.isLoading ? \r\n                    <div className=\"loading-bar\">\r\n                        <p className=\"loading-text\">LOADING ...</p>\r\n                        <div className=\"progress progress-striped\">\r\n                            <div className=\"progress-bar\" >\r\n                            </div>                       \r\n                        </div> \r\n                    </div>\r\n                : \r\n                    <h2>Skills</h2>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Skills;","import React, { Component } from 'react';\r\nimport '../Home/Home.css';\r\nimport '../../styles/style.css';\r\n\r\nclass Work extends Component {\r\n    state = {\r\n        isLoading: true\r\n    }\r\n    componentDidMount () {\r\n        setTimeout(() => { \r\n            this.setState(prevState => ({\r\n                isLoading: !prevState.isLoading,\r\n            }));\r\n        }, 1000);\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.isLoading ? \r\n                    <div className=\"loading-bar\">\r\n                        <p className=\"loading-text\">LOADING ...</p>\r\n                        <div className=\"progress progress-striped\">\r\n                            <div className=\"progress-bar\" >\r\n                            </div>                       \r\n                        </div> \r\n                    </div>\r\n                : \r\n                    <h2>Work</h2>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Work;","import React, { Component } from 'react';\r\nimport '../Home/Home.css';\r\nimport '../../styles/style.css';\r\n\r\nclass Contact extends Component {\r\n    state = {\r\n        isLoading: true\r\n    }\r\n    componentDidMount () {\r\n        setTimeout(() => { \r\n            this.setState(prevState => ({\r\n                isLoading: !prevState.isLoading,\r\n            }));\r\n        }, 1000);\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.isLoading ? \r\n                    <div className=\"loading-bar\">\r\n                        <p className=\"loading-text\">LOADING ...</p>\r\n                        <div className=\"progress progress-striped\">\r\n                            <div className=\"progress-bar\" >\r\n                            </div>                       \r\n                        </div> \r\n                    </div>\r\n                : \r\n                    <h2>Contact</h2>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\n\r\nclass ErrorPage extends Component {\r\n    state = {\r\n        isLoading: true\r\n    }\r\n    componentDidMount () {\r\n        setTimeout(() => { \r\n            this.setState(prevState => ({\r\n                isLoading: !prevState.isLoading,\r\n            }));\r\n        }, 1000);\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h1>Path doesn't exist</h1>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ErrorPage;","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n        <Container>\r\n            {props.children}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Layout;","import React from 'react';\r\nimport { Nav, Navbar, Container } from 'react-bootstrap';\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser, faBrain, faTv } from '@fortawesome/free-solid-svg-icons';\r\nimport { faFacebookF, faLinkedinIn, faGoogle } from \"@fortawesome/free-brands-svg-icons\"\r\n\r\nimport './Navigation.css';\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\" className=\"navbar-header\">\r\n            <Container>\r\n                <LinkContainer to=\"/profile/\">\r\n                    <Navbar.Brand className=\"navbar-logo\">PHURINAT</Navbar.Brand>\r\n                </LinkContainer>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" className=\"toggle-button\"/>\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"mr-auto text-center link\">\r\n                        <LinkContainer to=\"/profile/\"><Nav.Link>HOME</Nav.Link></LinkContainer>\r\n                        <LinkContainer to=\"/profile/about\"><Nav.Link>ABOUT</Nav.Link></LinkContainer>\r\n                        <LinkContainer to=\"/profile/skills\"><Nav.Link>SKILLS</Nav.Link></LinkContainer>\r\n                        <LinkContainer to=\"/profile/work\"><Nav.Link>WORK</Nav.Link></LinkContainer>\r\n                        <LinkContainer to=\"/profile/contact\"><Nav.Link>CONTACT</Nav.Link></LinkContainer>\r\n                    </Nav>\r\n                    <Nav className=\"text-center link\">\r\n                        <Nav.Link href=\"https://www.facebook.com/phurinat.puekkham.1\" target=\"_blank\"><FontAwesomeIcon icon={ faFacebookF }/></Nav.Link>\r\n                        <Nav.Link href=\"https://www.linkedin.com/in/phurinat-puekkham-333a9615a/\" target=\"_blank\"><FontAwesomeIcon icon={ faLinkedinIn }/></Nav.Link>\r\n                        <Nav.Link href=\"#\"><FontAwesomeIcon icon={ faGoogle }/></Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import React, { Component } from 'react';\nimport './App.css';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport Home from './containers/Home/Home';\nimport About from './containers/About/About';\nimport Skills from './containers/Skills/Skills';\nimport Work from './containers/Work/Work';\nimport Contact from './containers/Contact/Contact';\nimport ErrorPage from './containers/ErrorPage/ErrorPage';\nimport Layout from './components/Layout';\nimport Navigation from './components/Navigation';\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n          <BrowserRouter>\n            <Navigation />\n            <Layout>\n              <Switch>\n                <Route path=\"/profile/\" component={Home} exact/>\n                <Route path=\"/profile/about\" component={About} />\n                <Route path=\"/profile/skills\" component={Skills} />\n                <Route path=\"/profile/work\" component={Work} />\n                <Route path=\"/profile/contact\" component={Contact} />\n                <Route component={ErrorPage} />\n              </Switch>\n            </Layout>\n          </BrowserRouter>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}